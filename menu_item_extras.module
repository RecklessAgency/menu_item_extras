<?php

/**
 * @file
 * Adds body field to the menu item.
 */

use Drupal\Core\Entity\EntityTypeInterface;
use Drupal\Core\Field\BaseFieldDefinition;
use Drupal\menu_link_content\Plugin\Menu\MenuLinkContent;

/**
 * Implements hook_entity_base_field_info().
 */
function menu_item_extras_entity_base_field_info(EntityTypeInterface $entity_type) {
  $fields = [];

  if ($entity_type->id() === 'menu_link_content') {

    $fields['body'] = BaseFieldDefinition::create('text_long')
      ->setLabel(t('Body'))
      ->setDescription(t('Add description block to menu item.'))
      ->setTranslatable(TRUE)
      ->setDisplayOptions('form', array(
        'type' => 'text_textfield',
        'weight' => 0,
      ))
      ->setDisplayConfigurable('form', TRUE);
  }

  return $fields;
}

/**
 * Implements hook_preprocess_menu().
 */
function menu_item_extras_preprocess_menu(&$variables) {
  _menu_item_extras_process_items($variables['items']);
}

function _menu_item_extras_process_items(&$items) {
  // Process each item and add body field.
  foreach ($items as &$item) {
    $item['body'] = '';
    if (isset($item['original_link']) && $item['original_link'] instanceof MenuLinkContent) {
      // Get Menu Lint content entity id.
      $entity_id = $item['original_link']->getMetaData()['entity_id'];
      /** @var \Drupal\menu_link_content\Entity\MenuLinkContent $menu_item */
      $menu_item = \Drupal::entityTypeManager()
        ->getStorage('menu_link_content')
        ->load($entity_id);
      if (!$menu_item->get('body')->isEmpty()) {
        $field_body = $menu_item->get('body')->getValue();
        $item['body'] = [
          '#type' => 'processed_text',
          '#text' => $field_body[0]['value'],
          '#format' => $field_body[0]['format'],
        ];
      }
    }
    // Process subitems.
    if ($item['below']) {
      _menu_item_extras_process_items($item['below']);
    }
  }
}

